{% extends "layout.html.twig" %}

{% block meta %}
	<script src="/jquery.min.js"></script>
	<link href="/rickshaw/rickshaw.css" rel="stylesheet">
	<script src="/rickshaw/d3.min.js"></script>
	<script src="/rickshaw/d3.layout.min.js"></script>
	<script src="/rickshaw/rickshaw.min.js"></script>

	<style>
		#chart_container {
			width: 960px;
		}
		#legend {
			text-align: center;
		}
		#y_axis {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 40px;
			margin-top: 19px;
		}
	</style>

	<script>
		$(function(){
			var graph = new Rickshaw.Graph( {
				element: document.getElementById("chart"),
				width: 1000,
				interpolation: 'basis',
				height: 500,
				renderer: 'line',
				series: {{ json | json_encode | raw }}
			} );

			var axes = new Rickshaw.Graph.Axis.Time( { graph: graph } );

			var y_axis = new Rickshaw.Graph.Axis.Y( {
				graph: graph,
				orientation: 'left',
				tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
				element: document.getElementById('y_axis')
			} );

			graph.render();

			var legend = document.querySelector('#legend');

			var Hover = Rickshaw.Class.create(Rickshaw.Graph.HoverDetail, {
				render: function(args) {
					legend.innerHTML = args.formattedXValue;

					args.detail.sort(function(a, b) { return a.order - b.order }).forEach( function(d) {
						var line = document.createElement('div');
						line.className = 'line';

						var swatch = document.createElement('div');
						swatch.className = 'swatch';
						swatch.style.backgroundColor = d.series.color;

						var label = document.createElement('div');
						label.className = 'label';
						label.innerHTML = d.name + ": " + d.formattedYValue;

						line.appendChild(swatch);
						line.appendChild(label);

						legend.appendChild(line);

						var dot = document.createElement('div');
						dot.className = 'dot';
						dot.style.top = graph.y(d.value.y0 + d.value.y) + 'px';
						dot.style.borderColor = d.series.color;

						this.element.appendChild(dot);

						dot.className = 'dot active';

						this.show();

					}, this );
				}
			});

			var hover = new Hover( { graph: graph } );
		});
	</script>

{% endblock %}

{% block content %}

	<div class="btn-group btn-group-justified btn-group-x">
		{% for sensor in sensors %}
			<a class="btn {% if single_sensor_id and single_sensor_id == sensor.id %}btn-info{% else %}btn-default{% endif %}" href="/sensors/{{ sensor.id }}?from={{ current_from }}">
				{{ sensor.name }}
				{% if sensor.latest %}({{ sensor.latest }}){% endif %}
			</a>
		{% endfor %}
	</div>

	<div class="btn-group btn-group-justified btn-group-xs">
		{% for interval, label in from_intervals %}
			<a class="btn {% if interval == current_from %}btn-info{% else %}btn-default{% endif %}" href="?from={{ interval }}">
				{{ label }}
			</a>
		{% endfor %}
	</div>
	<div id="chart_container">
		<div id="y_axis"></div><br>
		<div id="chart"></div><br>
		<div id="legend"></div>
	</div>

{% endblock %}
