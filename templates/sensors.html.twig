{% extends "layout.html.twig" %}


	{% block content %}
	<div id="chart_container">
		<div id="y_axis"></div><br>
		<div id="chart"></div><br>
		<div id="legend"></div>
	</div>

		<ul>
			{% for sensor in sensors %}
				<li>
					<a href="/sensors/{{ sensor.id }}">{{ sensor.name }}</a>
				</li>
			{% endfor %}
		</ul>
		
		<style>
		#chart_container {
			width: 960px;
		}
		.swatch {
			display: inline-block;
			width: 10px;
			height: 10px;
			margin: 0 8px 0 0;
		}
		.label {
			display: inline-block;
		}
		.line {
			display: inline-block;
			margin: 0 0 0 30px;
		}
		#legend {
			text-align: center;
		}
		.rickshaw_graph .detail {
			background: none;
		}
		#y_axis {
			position: absolute;
			top: 0;
			bottom: 0;
			width: 40px;
		}
	</style>

	<script>
		var graph = new Rickshaw.Graph( {
			element: document.getElementById("chart"),
			width: 960,
			height: 500,
			renderer: 'line',
			series: {{ json | json_encode | raw }}
		} );

		var axes = new Rickshaw.Graph.Axis.Time( { graph: graph } );

		var y_axis = new Rickshaw.Graph.Axis.Y( {
			graph: graph,
			orientation: 'left',
			tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
			element: document.getElementById('y_axis')
		} );

		graph.render();

		var legend = document.querySelector('#legend');

		var Hover = Rickshaw.Class.create(Rickshaw.Graph.HoverDetail, {

			render: function(args) {

				legend.innerHTML = args.formattedXValue;

				args.detail.sort(function(a, b) { return a.order - b.order }).forEach( function(d) {

					var line = document.createElement('div');
					line.className = 'line';

					var swatch = document.createElement('div');
					swatch.className = 'swatch';
					swatch.style.backgroundColor = d.series.color;

					var label = document.createElement('div');
					label.className = 'label';
					label.innerHTML = d.name + ": " + d.formattedYValue;

					line.appendChild(swatch);
					line.appendChild(label);

					legend.appendChild(line);

					var dot = document.createElement('div');
					dot.className = 'dot';
					dot.style.top = graph.y(d.value.y0 + d.value.y) + 'px';
					dot.style.borderColor = d.series.color;

					this.element.appendChild(dot);

					dot.className = 'dot active';

					this.show();

				}, this );
			}
		});

		var hover = new Hover( { graph: graph } );

	</script>
{% endblock %}
