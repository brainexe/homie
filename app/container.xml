<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="logger.sensor.log">logs/sensor.log</parameter>
		<parameter key="application.name">raspberry</parameter>
		<parameter key="application.registration_enabled">false</parameter>

		<parameter key="raspberry_client.class"/>

		<parameter key="delete_sensor_values" type="collection">
			<parameter type="collection">
				<parameter key="days">7</parameter>
				<parameter key="percentage">25</parameter>
			</parameter>
			<parameter type="collection">
				<parameter key="days">30</parameter>
				<parameter key="percentage">50</parameter>
			</parameter>
		</parameter>
    </parameters>

	<services>
		<service id="RaspberryClient" alias="RaspberryClient.Local"/>
		<service id="AssetCollector" class="Matze\Core\Assets\AssetCollector">
			<argument type="service" id="Assetic"/>

			<call method="addProcessor">
				<argument type="service">
					<service parent="Assets.JsProcessor">
						<call method="addDefinition">
							<argument type="service">
								<service class="Matze\Core\Assets\Rules\MergableFilesDefinition">
									<argument>sensor.js</argument>
									<argument type="collection">
										<argument>js\/vendor\/d3.min.js</argument>
										<argument>js\/vendor\/d3.layout.min.js</argument>
										<argument>js\/vendor\/rickshaw.min.js</argument>
									</argument>
								</service>
							</argument>
						</call>
						<call method="addDefinition">
							<argument type="service">
								<service class="Matze\Core\Assets\Rules\MergableFilesDefinition">
									<argument>mood.js</argument>
									<argument type="collection">
										<argument>js\/vendor\/createjs.min.js</argument>
										<argument>js\/controllers\/mood\/.*</argument>
									</argument>
								</service>
							</argument>
						</call>
						<call method="addDefinition">
							<argument type="service">
								<service class="Matze\Core\Assets\Rules\MergableFilesDefinition">
									<argument>vendor.js</argument>
									<argument type="collection">
										<argument>js\/vendor\/jquery-2.1.0.min.js</argument>
										<argument>js\/vendor\/sockjs-0.3.min.js</argument>
										<argument>js\/vendor\/createjs.min.js</argument>
										<argument>js\/vendor\/angular.min.js</argument>
										<argument>js\/vendor\/angular-route.min.js</argument>
										<argument>js\/vendor\/draganddrop.js</argument>
										<argument>js\/vendor\/require.min.js</argument>
										<argument>js\/vendor\/ui-bootstrap-custom-0.10.0.min.js</argument>
										<argument>js\/vendor\/timeAgo.js</argument>
										<argument>js\/vendor\/jquery.ui.touch-punch.min.js</argument>
									</argument>
								</service>
							</argument>
						</call>
						<call method="addDefinition">
							<argument type="service">
								<service class="Matze\Core\Assets\Rules\MergableFilesDefinition">
									<argument>common.js</argument>
									<argument type="collection">
										<argument>js\/app.js</argument>
										<argument>js\/util\/.*</argument>
										<argument>js\/controllers\/.*</argument>
									</argument>
								</service>
							</argument>
						</call>
						<call method="setFallback">
							<argument>common.js</argument>
						</call>
					</service>
				</argument>
			</call>
			<call method="addProcessor">
				<argument type="service">
					<service parent="Assets.CssProcessor">
						<call method="addDefinition">
							<argument type="service">
								<service class="Matze\Core\Assets\Rules\MergableFilesDefinition">
									<argument>common.css</argument>
									<argument type="collection">
									</argument>
								</service>
							</argument>
						</call>
						<call method="setFallback">
							<argument>common.css</argument>
						</call>
					</service>
				</argument>
			</call>
			<call method="addProcessor">
				<argument type="service" id="Assets.ImageProcessor"/>
			</call>
			<call method="addProcessor">
				<argument type="service" id="Assets.TemplateProcessor"/>
			</call>
		</service>
	</services>
</container>
